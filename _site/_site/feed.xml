<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-19T12:17:39+08:00</updated><id>http://localhost:4000//</id><title type="html">luozhong’s blog</title><subtitle>...
</subtitle><entry><title type="html">社区react native iOS 端常见问题与解决方案</title><link href="http://localhost:4000/jekyll/update/2016/12/29/lovemoment.html" rel="alternate" type="text/html" title="社区react native iOS 端常见问题与解决方案" /><published>2016-12-29T11:36:34+08:00</published><updated>2016-12-29T11:36:34+08:00</updated><id>http://localhost:4000/jekyll/update/2016/12/29/lovemoment</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/29/lovemoment.html">&lt;h3 id=&quot;一搭建环境&quot;&gt;一、搭建环境&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://reactnative.cn/&quot;&gt;参考地址-中文&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react-native/&quot;&gt;参考地址-官网&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;需要资源&quot;&gt;需要资源&lt;/h4&gt;

&lt;p&gt;硬件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac 电脑 ##### 软件

xcode 	
nodejs
Homebrew //Mac系统的包管理器，用于安装NodeJS和一些其他必需的工具软件。
Yarn	//React Native的命令行工具（react-native-cli）
Watchman	//由Facebook提供的监视文件系统变更的工具。安装此工具可以提高开发时的性能（packager可以快速捕捉文件的变化从而实现实时刷新）。
Flow	//静态的JS类型检查工具
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;安装环境&quot;&gt;安装环境&lt;/h4&gt;

&lt;h5 id=&quot;安装homebrew&quot;&gt;安装Homebrew&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在Max OS X 10.11（El Capitan)版本中，homebrew在安装软件时可能会碰到/usr/local目录不可写的权限问题。可以使用下面的命令修复：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R `whoami` /usr/local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;配置node源&quot;&gt;配置node源&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm config set registry https://registry.npm.taobao.org --global
npm config set disturl https://npm.taobao.org/dist --global
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;安装yarn&quot;&gt;安装Yarn&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g yarn react-native-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你看到&lt;code class=&quot;highlighter-rouge&quot;&gt;EACCES: permission denied&lt;/code&gt;这样的权限报错，那么请参照上文的homebrew译注，修复/usr/local目录的所有权：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R `whoami` /usr/local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;安装xcode&quot;&gt;安装xcode&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;下载xcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载完成后执行默认安装即可&lt;/p&gt;

&lt;h5 id=&quot;安装watchman&quot;&gt;安装Watchman&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install watchman
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;安装flow&quot;&gt;安装Flow&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install flow
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;二新建工程&quot;&gt;二、新建工程&lt;/h3&gt;

&lt;p&gt;在目标文件夹中输入命令，初次执行此命令时间稍长&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native init AwesomeProject //初始化一个名为 AwesomeProject 的项目
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;模拟器运行项目&quot;&gt;模拟器运行项目&lt;/h3&gt;

&lt;h5 id=&quot;启动项目两种方式&quot;&gt;启动项目（两种方式）&lt;/h5&gt;

&lt;p&gt;1、命令启动方式进入项目目录执行  &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native run-ios&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd AwesomeProject &amp;amp;&amp;amp; react-native run-ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、xcode启动项目&lt;/p&gt;

&lt;p&gt;双击打开工程目录下 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/AwesomeProject.xcodeproj&lt;/code&gt;文件，这个文件是iOS工程文件。&lt;/p&gt;

&lt;p&gt;功能简介：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;🔨图标表示运行设备，模拟器或者真机，需要手动选择（目前只能选择模拟器）&lt;/li&gt;
  &lt;li&gt;左上角三角形&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;黑色正方形：停止run&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;选择一个模拟器&lt;/p&gt;

&lt;p&gt;点击黑色三角形即可运行项目&lt;/p&gt;

&lt;image src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode1.jpeg&quot; /&gt;

&lt;h3 id=&quot;三调试&quot;&gt;三、调试&lt;/h3&gt;

&lt;p&gt;聚焦到模拟器上&lt;/p&gt;

&lt;p&gt;选择左上角 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hardware/Shake Gesture&lt;/code&gt; 此时会在模拟器上呼出调试面板&lt;/p&gt;

&lt;image src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode2.jpeg&quot; /&gt;

&lt;image width=&quot;300px&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode3.jpeg&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;点击 &lt;strong&gt;Debug JS&lt;/strong&gt; 浏览器会自动打开 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8081/debugger-ui&lt;/code&gt; 页面，任何在react antive中的console即可在这个页面的控制台展示&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Enable Live Reload&lt;/strong&gt; 开启自动刷新页面功能，项目中保存后页面自动刷新&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;四模拟器基本操作快捷键&quot;&gt;四、模拟器基本操作快捷键&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + r&lt;/code&gt;键刷新模拟器页面&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + shift + h&lt;/code&gt; 回到主页（相当于真机按下home键）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + shift + h + h&lt;/code&gt; 快速点击两次 h （相当于双击home键）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;真机运行&quot;&gt;真机运行&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://idmsa.apple.com/IDMSWebAuth/login?appIdKey=891bd3417a7776362562d2197f89480a8547b108fd934911bcbea0110d07f757&amp;amp;path=%2Faccount%2F&amp;amp;rv=1&quot;&gt;注册开发者账号&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;双击打开工程目录下 &lt;code class=&quot;highlighter-rouge&quot;&gt;ios/AwesomeProject.xcodeproj&lt;/code&gt;文件启动xcode&lt;/li&gt;
  &lt;li&gt;将手机连接到电脑，并在手机弹框上点击 &lt;strong&gt;信任&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;单击左侧栏工程名，打开控制面板，选择 &lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt;下的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Signing&lt;/code&gt;，勾选&lt;code class=&quot;highlighter-rouge&quot;&gt;Autimatically manage signing&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Team&lt;/code&gt; 选项中选择 &lt;code class=&quot;highlighter-rouge&quot;&gt;add an account&lt;/code&gt; 添加自己的开发者账号&lt;/li&gt;
&lt;/ul&gt;
&lt;image src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode4.jpeg&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;在左上角黑色正方形旁边的设备中选择连接电脑的iphone名称，中间顶部状态栏会展示当前设备准备情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;image src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode5.jpeg&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;当设备准备就绪后 点击黑色三角形或者按下&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + r&lt;/code&gt;键运行程序，随后手机上即可安装&lt;/li&gt;
  &lt;li&gt;安装ok后点击图标启动app，如果弹出需要信任证书则进入 &lt;code class=&quot;highlighter-rouge&quot;&gt;系统设置-通用-设备管理&lt;/code&gt;中找到相关证书，点击验证即可*&lt;/li&gt;
  &lt;li&gt;进入app界面后摇晃手机即可呼出开发者面板，即可选择&lt;strong&gt;自动刷新&lt;/strong&gt;或者 &lt;strong&gt;调试模式&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;温馨提示：摇晃手机记得拿稳&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;五真机运行-切换运行模式&quot;&gt;五、真机运行-切换运行模式&lt;/h3&gt;

&lt;p&gt;运行模式分为&lt;strong&gt;debug&lt;/strong&gt; 和 &lt;strong&gt;release&lt;/strong&gt; 两种&lt;/p&gt;

&lt;h5 id=&quot;debug即程序调试时候此时应用运行基于我们的未打包的js文件可实时修改预览&quot;&gt;debug即程序调试时候，此时应用运行基于我们的未打包的js文件，可实时修改预览&lt;/h5&gt;

&lt;h5 id=&quot;release即发布xcode会自动打包js文件&quot;&gt;release即发布，xcode会自动打包js文件&lt;/h5&gt;

&lt;p&gt;同时按下 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + shift + ,&lt;/code&gt;三个键 唤起设置界面&lt;/p&gt;

&lt;image src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode11.jpeg&quot; /&gt;

&lt;h4 id=&quot;真机调试报错情况&quot;&gt;真机调试报错情况&lt;/h4&gt;

&lt;h5 id=&quot;1-在运行release模式的时候-出现如下错误删除这个test文件再运行即可&quot;&gt;1. 在运行release模式的时候 出现如下错误，删除这个test文件再运行即可&lt;/h5&gt;

&lt;image width=&quot;300px&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode8.jpeg&quot; /&gt;

&lt;h5 id=&quot;2-运行debug时出现以下错误需要clean同时按下-shift--cmd--k-完成清除&quot;&gt;2. 运行debug时出现以下错误，需要clean，同时按下 &lt;code class=&quot;highlighter-rouge&quot;&gt;shift + cmd + k&lt;/code&gt; 完成清除&lt;/h5&gt;

&lt;image width=&quot;300px&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode12.jpeg&quot; /&gt;

&lt;h3 id=&quot;五修改iconappname和启动画面&quot;&gt;五、修改icon，appname和启动画面&lt;/h3&gt;

&lt;h4 id=&quot;修改icon&quot;&gt;修改icon&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;appstore 搜索 &lt;strong&gt;Prepo&lt;/strong&gt; 下载安装&lt;/li&gt;
  &lt;li&gt;启动&lt;strong&gt;Prepo&lt;/strong&gt; 将需要的图标（一张原图）拖放到软件中即可生成全部类型的icon，导出即可&lt;/li&gt;
  &lt;li&gt;xcode中打开项目&lt;/li&gt;
&lt;/ul&gt;
&lt;image width=&quot;100%&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode6.jpeg&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;将导出的icon拖到对应的地方，2x、3x表示倍数。大小为像素，例如第一个图标为 20x2=40像素 的图标&lt;/li&gt;
  &lt;li&gt;重新运行项目即可看到图标
 &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;修改appname&quot;&gt;修改appName&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;修改info.plist文件，新建名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle display name&lt;/code&gt; 的key，值为 app的名字，这个值在发布 ipa包的时候需要&lt;/li&gt;
  &lt;li&gt;修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle name&lt;/code&gt; 值为 app的名字，在真机运行的时候需要&lt;/li&gt;
&lt;/ul&gt;
&lt;image width=&quot;100%&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode7.jpeg&quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;再次运行项目即可看到更新的应用名&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;修改app-transport-security-settings&quot;&gt;修改App Transport Security Settings&lt;/h4&gt;

&lt;p&gt;添加方法参考上文  &lt;strong&gt;&lt;em&gt;修改appName&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;iOS 10 添加了https安全策略 为了继续使用 http 需要做以下修改&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;App Transport Security Settings 添加 Allow Arbitrary Loads 布尔值 YES
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;image width=&quot;100%&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode9.jpeg&quot; /&gt;

&lt;h4 id=&quot;webview调用相机闪退&quot;&gt;WebView调用相机闪退&lt;/h4&gt;

&lt;p&gt;在info.plist文件下添加如下key&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;相机权限

&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;

&amp;lt;string&amp;gt;cameraDesciption&amp;lt;/string&amp;gt;	 

相册权限

&amp;lt;key&amp;gt;NSPhotoLibraryUsageDescription&amp;lt;/key&amp;gt;

&amp;lt;string&amp;gt;photoLibraryDesciption&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;image width=&quot;100%&quot; src=&quot;http://ois2zrmyi.bkt.clouddn.com/xcode10.jpeg&quot; /&gt;</content><summary type="html">一、搭建环境
参考地址-中文</summary></entry><entry><title type="html">react native iOS 热更新（真机运行，打包文件，上传 ）</title><link href="http://localhost:4000/jekyll/update/2016/01/19/iOS-cudepush.html" rel="alternate" type="text/html" title="react native iOS 热更新（真机运行，打包文件，上传 ）" /><published>2016-01-19T11:36:34+08:00</published><updated>2016-01-19T11:36:34+08:00</updated><id>http://localhost:4000/jekyll/update/2016/01/19/iOS-cudepush</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/01/19/iOS-cudepush.html">&lt;h3 id=&quot;本文使用的是-微软codepush-cloud-服务&quot;&gt;本文使用的是 微软codepush cloud 服务。&lt;/h3&gt;

&lt;h3 id=&quot;热更新环境以及插件的安装&quot;&gt;热更新环境以及插件的安装&lt;/h3&gt;

&lt;h4 id=&quot;这份文档建立在已经能在ios模拟器上正常运行项目的基础上&quot;&gt;这份文档建立在已经能在iOS模拟器上正常运行项目的基础上&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://microsoft.github.io/code-push/docs/react-native.html#link-4&quot;&gt;参考文章1-code-push&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;使用codepush做热更新&quot;&gt;使用codepush做热更新&lt;/h4&gt;

&lt;h4 id=&quot;运行环境&quot;&gt;运行环境&lt;/h4&gt;

&lt;p&gt;macOS Sierra 10.12.1&lt;/p&gt;

&lt;p&gt;iOS10&lt;/p&gt;

&lt;p&gt;xcode Version 8.1 (8B62)&lt;/p&gt;

&lt;h4 id=&quot;codepush简介&quot;&gt;CodePush简介&lt;/h4&gt;

&lt;p&gt;CodePush 是微软提供的一套用于热更新 React Native 和 Cordova 应用的服务。
CodePush 是提供给 React Native 和 Cordova 开发者直接部署移动应用更新给用户设备的云服务。CodePush 作为一个中央仓库，开发者可以推送更新 (JS, HTML, CSS and images)，应用可以从客户端 SDK 里面查询更新。CodePush 可以让应用有更多的可确定性，也可以让你直接接触用户群。在修复一些小问题和添加新特性的时候，不需要经过二进制打包，可以直接推送代码进行实时更新。&lt;/p&gt;

&lt;h4 id=&quot;安装与注册codepush&quot;&gt;安装与注册CodePush&lt;/h4&gt;

&lt;p&gt;使用CodePush之前首先要安装CodePush客户端，我的机器是OS Sierra 10.12.1&lt;/p&gt;

&lt;p&gt;涉及到的指令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g code-push-cli //安装codepush客户端

code-push register	//注册codepush账号

code-push login	//登录

code-push loout	//注销

code-push access-key ls		//列出登陆的token

code-push access-key rm &amp;lt;accessKye&amp;gt;	//删除某个 access-key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;管理 CodePush 账号需要通过 NodeJS-based CLI，如果未安装则可以输入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g code-push-cli	//-g表示全局安装
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的版本是&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/codepus.jpeg&quot; /&gt;

&lt;h4 id=&quot;创建一个codepush-账号&quot;&gt;创建一个CodePush 账号&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push register
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;浏览器会自动打开注册页面，我这里用的是git账号授权的。&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/reg.png&quot; /&gt;

&lt;p&gt;授权通过之后，CodePush会展示“access key”，复制此key到终端即可完成注册。&lt;/p&gt;

&lt;p&gt;登录，登陆成功后，session文件将会写在 /Users/你的用户名/.code-push.config 中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push login
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至此 codepush客户端相关工作完成&lt;/p&gt;

&lt;h4 id=&quot;在codepush服务器注册app项目&quot;&gt;在CodePush服务器注册app（项目）&lt;/h4&gt;

&lt;p&gt;涉及相关命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push app add &amp;lt;appName&amp;gt; //在账号里面添加一个新的app

code-push app rm &amp;lt;appName&amp;gt;	在账号里移除一个app

code-push app rename &amp;lt;appName&amp;gt; //重命名一个存在app

code-push app ls //列出账号下面的所有app

code-push app transfer //把app的所有权转移到另外一个账号
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;为了让codepush关联上我们需要热更的app  则需要向codepush注册目标 app，我的app名字是Trip，请自行对应自己的app名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push app add Trip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;集成codepush-sdk-到-ios项目中目前我只做了ios版&quot;&gt;集成CodePush SDK 到 iOS项目中（目前我只做了iOS版）&lt;/h4&gt;

&lt;h5 id=&quot;安装codepush插件到项目中&quot;&gt;安装CodePush插件到项目中&lt;/h5&gt;

&lt;p&gt;我的项目目录结构是&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/mulu.jpg&quot; /&gt;

&lt;p&gt;在项目根目录下执行指令，此时会在node_modules文件夹中生成react-native-code-push文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install --save react-native-code-push
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;使用cocoapods导入code-push到ios项目中-参考文档&quot;&gt;使用cocoapods导入code-push到iOS项目中 &lt;a href=&quot;https://microsoft.github.io/code-push/docs/react-native.html#link-4&quot;&gt;参考文档&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;cocoapods：简单理解一个iOS的依赖管理工具，有点类似前端的 &lt;a href=&quot;https://bower.io/&quot;&gt;bower&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;首先安装cocoapods&quot;&gt;首先安装cocoapods&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install cocoapods

如果报错

ERROR:  While executing gem ... (Gem::DependencyError)
Unable to resolve dependencies: cocoapods requires cocoapods-core (= 1.1.1), cocoapods-downloader (&amp;lt; 2.0, &amp;gt;= 1.1.2), cocoapods-trunk (&amp;lt; 2.0, &amp;gt;= 1.1.1), xcodeproj (&amp;lt; 2.0, &amp;gt;= 1.3.3)

尝试运行

sudo gem install cocoapods --pre 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在项目&lt;code class=&quot;highlighter-rouge&quot;&gt;ios&lt;/code&gt;文件夹中新建&lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile&lt;/code&gt;文件内容如下，&lt;a href=&quot;https://guides.cocoapods.org/contributing/contribute-to-cocoapods.html&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;platform :ios, '8.0'

target 'Trip' do	//app名字自行修改
    pod 'CodePush', :path =&amp;gt; '../node_modules/react-native-code-push'//路径根据自己的文件目录修改
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;项目&lt;code class=&quot;highlighter-rouge&quot;&gt;Podfile &lt;/code&gt;同级目录下运行指令，即可将codepush插件集成到项目&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在xcode中打开项目&lt;/p&gt;

&lt;p&gt;项目目录下有 &lt;em&gt;iOS&lt;/em&gt; 文件夹，里面有一个叫 &lt;em&gt;xxxx.xcodeproj&lt;/em&gt; 的文件 点击就可用xcode打开，打开后我的目录结构是这样的&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode1.jpg&quot; /&gt;

&lt;p&gt;在文件夹中打开项目文件夹，找到/node_modules/react-native-code-push/ios/CodePush.xcodeproj  这个文件&lt;/p&gt;

&lt;p&gt;将他拖到xcode项目中的Libraries文件夹中&lt;/p&gt;

&lt;p&gt;目的是为了将codepush集成到iOS项目中使用相关功能&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode2.jpeg&quot; /&gt;

&lt;p&gt;在xcode中 点击蓝色的项目名称呼出中间的操作栏，点击操作栏上面的 &lt;strong&gt;&lt;em&gt;build phases&lt;/em&gt;&lt;/strong&gt; 栏 打开&lt;strong&gt;&lt;em&gt;Link Binary With Libraries&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;将 &lt;code class=&quot;highlighter-rouge&quot;&gt;Libraries/CodePush.xcodeproj/Products&lt;/code&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;libCodePush.a&lt;/code&gt;文件拖入&lt;code class=&quot;highlighter-rouge&quot;&gt;Link Binary With Libraries&lt;/code&gt;中&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode3.jpeg&quot; /&gt;

&lt;p&gt;点击&lt;strong&gt;&lt;em&gt;Link Binary With Libraries&lt;/em&gt;&lt;/strong&gt;的加号，选择 &lt;strong&gt;&lt;em&gt;libz.tbd&lt;/em&gt;&lt;/strong&gt; 添加进去，添加上了，iOS编译出来的包中就会包含这些库。&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode4.jpeg&quot; /&gt;

&lt;p&gt;选择操作栏上部 &lt;strong&gt;&lt;em&gt;Build Settings&lt;/em&gt;&lt;/strong&gt; 栏目 在&lt;strong&gt;&lt;em&gt;Header Search Paths&lt;/em&gt;&lt;/strong&gt;那一项中加入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(SRCROOT)/../node_modules/react-native-code-push
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;并且这一项的后面必须选择 &lt;strong&gt;&lt;em&gt;recursive&lt;/em&gt;&lt;/strong&gt;  （用力敲黑板），这是让iOS知道去递归查找此依赖 否则有可能找不到&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode5.jpeg&quot; /&gt;

&lt;p&gt;####代码中配置CodePush插件&lt;/p&gt;

&lt;p&gt;打开xcode 在项目中找到 &lt;strong&gt;&lt;em&gt;AppDelegate.m&lt;/em&gt;&lt;/strong&gt;文件，并单击左键打开 ，一般在项目名文件夹中 找不到就仔细点找&lt;/p&gt;

&lt;p&gt;在代码头部加入代码并&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd + s&lt;/code&gt;保存，如果加入后报错，则对照上面的步骤仔细检查是否疏漏了，找不到此文件表明前面的依赖引入没有成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#import &quot;CodePush.h&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;继续在此文件中找到 &lt;code class=&quot;highlighter-rouge&quot;&gt;jsCodeLocation &lt;/code&gt; 关键词，将源码替换成以下代码&lt;/p&gt;

&lt;p&gt;PS：让iOS判断是否是debug 和 release模式 对应加载不同的入口文件。我们热更时需要以 &lt;code class=&quot;highlighter-rouge&quot;&gt;release&lt;/code&gt;方式运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifdef DEBUG
    jsCodeLocation = [NSURL URLWithString:@&quot;http://localhost:8081/index.ios.bundle?	platform=ios&amp;amp;dev=true&quot;];
#else
    jsCodeLocation = [CodePush bundleURL];
#endif
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动命令窗口输入命令获取 &lt;code class=&quot;highlighter-rouge&quot;&gt;Staging &lt;/code&gt; key，复制 &lt;code class=&quot;highlighter-rouge&quot;&gt;Staging &lt;/code&gt; 的值（因为是在生产环境 所以使用 &lt;strong&gt;&lt;em&gt;Staging&lt;/em&gt;&lt;/strong&gt;）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push deployment ls  &amp;lt;AppName&amp;gt; --displayKeys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/codepush1.jpeg&quot; /&gt;

&lt;p&gt;打开xcode 将此值填入 &lt;strong&gt;&lt;em&gt;info.plist&lt;/em&gt;&lt;/strong&gt;文件中&lt;/p&gt;

&lt;p&gt;添加 &lt;strong&gt;&lt;em&gt;CodePushDeploymentKey&lt;/em&gt;&lt;/strong&gt; 键&lt;/p&gt;

&lt;p&gt;将 &lt;strong&gt;&lt;em&gt;Bundle versions string, short&lt;/em&gt;&lt;/strong&gt; 值改成 &lt;strong&gt;&lt;em&gt;1.0.0&lt;/em&gt;&lt;/strong&gt; 因为iOS中codepush只支持这样的格式&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode6.jpeg&quot; /&gt;

&lt;p&gt;xcode中点击项目名 调出中间的操作栏 点击 &lt;strong&gt;&lt;em&gt;general&lt;/em&gt;&lt;/strong&gt; 如果下面的 &lt;strong&gt;&lt;em&gt;build&lt;/em&gt;&lt;/strong&gt; 值为空  则改为1 （我这里是1 自己对应自己的项目）&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode7.jpeg&quot; /&gt;

&lt;p&gt;####react native 中使用插件&lt;/p&gt;

&lt;p&gt;打开iOS的入口文件 我这里是 &lt;strong&gt;&lt;em&gt;index.ios.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在代码中引入插件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import codePush from &quot;react-native-code-push&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 父组件的 &lt;strong&gt;&lt;em&gt;componentDidMount&lt;/em&gt;&lt;/strong&gt; 方法中调用热更新方法&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;componentDidMount(){
	codePush.sync();
  	} ***以上就完成了基本的配置***
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###react native 打包&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react-native/blob/master/local-cli/bundle/bundleCommandLineArgs.js&quot;&gt;相关命令&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;常用参数解释&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--entry-file //ios或android入口的文件名称，一般叫 index.ios.js或 index.android.js

--platform //平台名称(ios/android)

--dev //设置为false的时候会对JavaScript代码进行优化处理。

--bundle-output //生成的jsbundle文件的名称(包含路径)，比如./ios/bundle/index.ios.jsbundle

--assets-dest //图片以及其他资源存放的目录,比如./ios/assets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的打包命令如下，我的静态资源放到 ios/Trip/assets 中的（依照个人的路径为准）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;特别注意：bundle 文件夹 需要事先手动建好&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle --entry-file index.ios.js --platform ios --dev false --bundle-output ./ios/bundle/index.ios.jsbundle --assets-dest ./ios/Trip/assets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此时成功会在&lt;strong&gt;&lt;em&gt;ios&lt;/em&gt;&lt;/strong&gt;目录下看到一个&lt;strong&gt;&lt;em&gt;bundle&lt;/em&gt;&lt;/strong&gt;目录，里面是我们的打包文件&lt;/p&gt;

&lt;p&gt;打开xcode ，选中项目中和项目名一样的黄色文件夹，右键选择&lt;strong&gt;&lt;em&gt;Add Files to “RNIos”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;找到我们的&lt;strong&gt;&lt;em&gt;bundle&lt;/em&gt;&lt;/strong&gt;，注意是文件夹，不是文件，然后不要猴急猴急的点add按钮，请看下一步&lt;/p&gt;

&lt;p&gt;在&lt;strong&gt;&lt;em&gt;option&lt;/em&gt;&lt;/strong&gt;中选择&lt;strong&gt;&lt;em&gt;Create folder references&lt;/em&gt;&lt;/strong&gt; 然后点击 add&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode11.jpeg&quot; /&gt;

&lt;p&gt;完成后即可进行下一步的真机安装了&lt;/p&gt;

&lt;h3 id=&quot;ios真机测试热更新&quot;&gt;iOS真机测试热更新&lt;/h3&gt;

&lt;p&gt;首先需要在apple&lt;a href=&quot;https://developer.apple.com/&quot;&gt;开发者网站&lt;/a&gt;去注册开发者账号（个人测试可以不交99的保护费）&lt;/p&gt;

&lt;p&gt;xcode 中打开项目（参考上文如何打开项目）&lt;/p&gt;

&lt;p&gt;点击项目，在操作栏中选择&lt;strong&gt;* general&lt;/strong&gt;* 在team中选择自己的开发者账户&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode8.jpeg&quot; /&gt;

&lt;p&gt;按下 &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd+shift+,&lt;/code&gt;键打开配置窗口，在&lt;strong&gt;&lt;em&gt;build configration&lt;/em&gt;&lt;/strong&gt; 中可以选择项目运行方式（debug/release）&lt;/p&gt;

&lt;p&gt;debug：真机调试用，当修改代码后可以在真机上时时看到效果&lt;/p&gt;

&lt;p&gt;releae：使用上文指定的bundle文件运行，等于与本地代码时时修改没有关系了（热更新需要使用这个模式调试）&lt;/p&gt;

&lt;p&gt;将手机插上 &lt;strong&gt;&lt;em&gt;usb&lt;/em&gt;&lt;/strong&gt; 链接 &lt;strong&gt;&lt;em&gt;mac&lt;/em&gt;&lt;/strong&gt;，点击左上角手机图标，即可看到我们的真机机器名，选择它，然后点击左边的三角形按钮运行项目。&lt;/p&gt;

&lt;p&gt;坐等几分钟，不出意外的话即可在手机上安装app ，成功或失败 xcode会弹出提示。&lt;/p&gt;

&lt;image src=&quot;http://ok0dwebt7.bkt.clouddn.com/xcode10.jpeg&quot; /&gt;

&lt;p&gt;上述操作成功在手机上安装app后，就可以继续下面的打包发布了。&lt;/p&gt;

&lt;h3 id=&quot;打包-bundle-文件&quot;&gt;打包 bundle 文件&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle --entry-file index.ios.js --platform ios --dev false --bundle-output ./ios/bundle/index.ios.jsbundle --assets-dest ./ios/Trip/assets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;向codepush发布打包代码&quot;&gt;向codepush发布打包代码&lt;/h3&gt;

&lt;p&gt;随意修改代码，使其表现和手机上显示不一致即可&lt;/p&gt;

&lt;p&gt;然后重新执行打包命令，生成一个新的bundle文件&lt;/p&gt;

&lt;p&gt;执行codepush的发布命令，将新文件发布到&lt;strong&gt;&lt;em&gt;staging&lt;/em&gt;&lt;/strong&gt; 环境中&lt;/p&gt;

&lt;p&gt;相关命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push release &amp;lt;appName&amp;gt; &amp;lt;updateContents&amp;gt; &amp;lt;targetBinaryVersion&amp;gt; --mandatory //发布

code-push deployment history Trip Staging  //查询发布历史
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参数解释&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;appName&amp;gt; //app名称

&amp;lt;updateContents&amp;gt; //Bundle文件所在目录（完整）

&amp;lt;targetBinaryVersion&amp;gt;	// 需要热更的app 版本

--mandatory //此参数非必须  如果有则表示app强制更新
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的命令如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push release Trip ./ios/bundle/index.ios.jsbundle 1.0.0 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功后重启app 则会看到更新（是重启app 需要结束程序后再打开）&lt;/p&gt;

&lt;p&gt;cocoapods用来管理依赖，类似前端的bower&lt;/p&gt;

&lt;p&gt;一般一分钟成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install cocoapods

如果报错

ERROR:  While executing gem ... (Gem::DependencyError)
Unable to resolve dependencies: cocoapods requires cocoapods-core (= 1.1.1), cocoapods-downloader (&amp;lt; 2.0, &amp;gt;= 1.1.2), cocoapods-trunk (&amp;lt; 2.0, &amp;gt;= 1.1.1), xcodeproj (&amp;lt; 2.0, &amp;gt;= 1.3.3)

尝试运行

sudo gem install cocoapods --pre 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><summary type="html">本文使用的是 微软codepush cloud 服务。</summary></entry><entry><title type="html">react native codepush之搭建自己的更新服务器</title><link href="http://localhost:4000/jekyll/update/2016/01/19/cudepush-server.html" rel="alternate" type="text/html" title="react native codepush之搭建自己的更新服务器" /><published>2016-01-19T11:36:34+08:00</published><updated>2016-01-19T11:36:34+08:00</updated><id>http://localhost:4000/jekyll/update/2016/01/19/cudepush-server</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/01/19/cudepush-server.html">&lt;p&gt;&lt;a href=&quot;https://github.com/lisong/code-push-server&quot;&gt;参考文章-code-push-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;感谢上文作者的辛苦付出&lt;/p&gt;

&lt;p&gt;本文简历在已经成功运行 微软 codepush热更新，并且了解codepush 相关指令的基础上。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/19f23d66286f&quot;&gt;参考文章-iOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/eafe0136d3a3&quot;&gt;参考文章-android&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;简介&quot;&gt;简介&lt;/h4&gt;
&lt;p&gt;code-push-server是一个开源项目，基于 nodejs + mysql 搭建自己的热更新服务器&lt;/p&gt;

&lt;h4 id=&quot;环境&quot;&gt;环境&lt;/h4&gt;

&lt;p&gt;macOS Sierra 10.12.1&lt;/p&gt;

&lt;p&gt;nodejs v4.3.1&lt;/p&gt;

&lt;p&gt;mysql 5.6&lt;/p&gt;

&lt;h4 id=&quot;一安装mysql其他环境自行对应mysql安装&quot;&gt;一、安装mysql（其他环境自行对应mysql安装）&lt;/h4&gt;

&lt;p&gt;推荐安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql 5.6&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/5.6.html#downloads&quot;&gt;mysql 5.6下载地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一键安装 毫无压力&lt;/p&gt;

&lt;h5 id=&quot;设置mysql密码&quot;&gt;设置mysql密码&lt;/h5&gt;

&lt;p&gt;进入mysql安装目录，命令分步执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/local/mysql/bin

./mysql -u root -p  //这一步是登录root用户 回车即可，5.6默人密码为空

修改密码

set password = password('输入你的新密码');  //引号不能省略
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;启动mysql服务&quot;&gt;启动mysql服务&lt;/h5&gt;

&lt;p&gt;打开 系统设置，在面板下会出现一个mysql的图标，点击进入并启动即可。&lt;/p&gt;

&lt;image src=&quot;http://ok0ekjrod.bkt.clouddn.com/mysql.jpeg&quot;&gt;&lt;/image&gt;

&lt;h4 id=&quot;二本地安装code-push-serve&quot;&gt;二、本地安装code-push-serve&lt;/h4&gt;

&lt;p&gt;作者发布了两种安装方式（npm安装或源码安装），在此我推荐使用源码安装，因为后期我们要基于这个服务修改自己的网页，源码安装方便些。&lt;/p&gt;

&lt;p&gt;首先进入项目准备安装的目录执行以下命令（如果没有安装git 则可以去git上download下来解压）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/lisong/code-push-server.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;clone完毕后执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd code-push-server &amp;amp;&amp;amp; npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;config/config.js&lt;/code&gt; 文件，在 &lt;strong&gt;db&lt;/strong&gt; 对象中添加数据库信息，参考如下配置，对应自己的用户名密码，数据库名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db: {
    username: &quot;root&quot;,	//
    password: &quot;123456&quot;,
    database: &quot;codepush&quot;,
    host: &quot;127.0.0.1&quot;,
    port: 3306,
    dialect: &quot;mysql&quot;
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;初始化服务，项目根目录（code-push-server）下执行命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/db init --dbhost localhost --dbuser root --dbpassword #初始化mysql数据库
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述无报错即可进行下一步&lt;/p&gt;

&lt;h4 id=&quot;三配置服务器-存储在本地&quot;&gt;三、配置服务器-存储在本地&lt;/h4&gt;

&lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;config/config.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将 &lt;strong&gt;common&lt;/strong&gt; 对象中的 &lt;strong&gt;storageType&lt;/strong&gt;改为 &lt;strong&gt;local&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;新建文件存储目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;storage&lt;/code&gt;，并修改配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local: {
    //此地址为以上新建的文件夹，自己对应自己的路径
    storageDir: &quot;/Users/luozhong/work/reactNative/server/storage&quot;,
    //ip地址改成自己设备对应的ip 这是下载地址 
    downloadUrl: &quot;http://192.168.201.113:3000/download&quot;
  }
  
 common: {
 		//此地址为以上新建的文件夹，自己对应自己的路径
    dataDir: &quot;/Users/luozhong/work/reactNative/server/data&quot;,
    storageType: &quot;local&quot;	//选择存储类型，目前支持local和qiniu配置
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/www	//无报错信息即为正常启动，可以在浏览器中输入 http://127.0.0.1:3000查看，默认用户名密码是 admin 123456
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;四项目与服务建立链接&quot;&gt;四、项目与服务建立链接&lt;/h4&gt;

&lt;p&gt;进入reactnative 项目根目录执行命令查看当前是否登录，因为是新服务，所以要先保证没有别的账号正在登录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; code-push whoami
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果报错如下，表示没有登录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Error]  You are not currently logged in. Run the 'code-push login' command to authenticate with the CodePush server.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果没有报错 并且显示邮箱账号，则表示已经登录账户，则我们要先注销当前账号&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push logout
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功注销后执行登录指令，浏览器会自动打开本地服务登录页面，命令行中会提示输入key&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push login http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输入账号和密码 &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;123456&lt;/code&gt; 登录后点击按钮 &lt;code class=&quot;highlighter-rouge&quot;&gt;获取token&lt;/code&gt; 并复制token到命令行中，并回车确认&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Successfully logged-in. //提示此表示登录成功
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至此我们已经将codepush和我们自建的服务器关联起来了.&lt;/p&gt;

&lt;h4 id=&quot;五注册应用&quot;&gt;五、注册应用&lt;/h4&gt;

&lt;p&gt;项目根目录下执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push app add Trip-ios	//项目名+iOS/android后缀
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;六项目中修改对应的key&quot;&gt;六、项目中修改对应的key&lt;/h4&gt;

&lt;p&gt;查看key&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push deployment ls Trip-ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;Staging &lt;/code&gt;值修改到对应的iOS或安卓项目中并重新打包安装&lt;/p&gt;

&lt;h4 id=&quot;七发布更新&quot;&gt;七、发布更新&lt;/h4&gt;

&lt;p&gt;进入项目根目录执行以下命令，表示打包并发布，默认发布在开发环境&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; code-push release-react Trip-ios ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功后即可打开app验证。&lt;/p&gt;</content><summary type="html">参考文章-code-push-server</summary></entry><entry><title type="html">react native android 热更新（真机运行，打包文件，上传 ）</title><link href="http://localhost:4000/jekyll/update/2016/01/19/android-cudepush.html" rel="alternate" type="text/html" title="react native android 热更新（真机运行，打包文件，上传 ）" /><published>2016-01-19T11:36:34+08:00</published><updated>2016-01-19T11:36:34+08:00</updated><id>http://localhost:4000/jekyll/update/2016/01/19/android-cudepush</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/01/19/android-cudepush.html">&lt;h3 id=&quot;运行环境&quot;&gt;运行环境&lt;/h3&gt;

&lt;p&gt;macOS Sierra 10.12.1&lt;/p&gt;

&lt;p&gt;jdk 1.8.0_101&lt;/p&gt;

&lt;h3 id=&quot;打包-apk&quot;&gt;打包 apk&lt;/h3&gt;

&lt;h4 id=&quot;生成签名秘钥&quot;&gt;生成签名秘钥&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;keytool &lt;/code&gt; java证书管理工具&lt;/p&gt;

&lt;p&gt;相关参数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-genkey	//在用户目录中创建一个默认文件”.keystore”,还会产生一个mykey的别名，mykey中包含用户的公钥、私钥和证书

-alias	//产生别名 每个keystore都关联这一个独一无二的alias，这个alias通常不区分大小写

-keyalg	//指定密钥的算法 (如 RSA DSA，默认值为：DSA)

-keystore	//指定密钥库的名称(产生的各类信息将不在.keystore文件中)

-validity	//指定创建的证书有效期多少天(默认 90)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;终端进入&lt;strong&gt;工程目录&lt;/strong&gt;输入签名命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这条命令会要求你输入密钥库（keystore）和对应密钥的密码，然后设置一些发行相关的信息。最后它会生成一个叫做my-release-key.keystore的密钥库文件&lt;/p&gt;

&lt;image src=&quot;http://ok0ecqynu.bkt.clouddn.com/sing1.jpeg&quot; /&gt;

&lt;p&gt;在运行上面这条语句之后，密钥库里应该已经生成了一个单独的密钥，有效期为10000天。–alias参数后面的别名是你将来为应用签名时所需要用到的，所以记得记录这个别名。&lt;/p&gt;

&lt;p&gt;秘钥文件默认生在当前目录（mac是如此，windows不清楚）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：请记得妥善地保管好你的密钥库文件，不要上传到版本库或者其它的地方。&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;设置gradle变量&quot;&gt;设置gradle变量&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;my-release-key.keystore&lt;/code&gt;文件（根据自己命名不同）移动到工程&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app&lt;/code&gt;中&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;/android/gradle.properties&lt;/code&gt;文件，添加以下的代码&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; MYAPP_RELEASE_STORE_FILE=my-release-key.keystore
 MYAPP_RELEASE_KEY_ALIAS=my-key-alias
 MYAPP_RELEASE_STORE_PASSWORD=这里写刚才输入的密码
 MYAPP_RELEASE_KEY_PASSWORD=这里写刚才输入的密码
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;上面的这些会作为全局的gradle变量，在后面的步骤中可以用来给app签名。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;一旦你在Play Store发布了你的应用，如果想修改签名，就必须用一个不同的包名来重新发布你的应用（这样也会丢失所有的下载数和评分）。所以请务必备份好你的密钥库和密码。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;添加签名到项目的gradle配置文件&quot;&gt;添加签名到项目的gradle配置文件&lt;/h4&gt;

&lt;p&gt;打开项目目录下的&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;文件&lt;/p&gt;

&lt;p&gt;在 &lt;strong&gt;android&lt;/strong&gt; 字段中添加如下代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;signingConfigs {
    release {
        storeFile file(MYAPP_RELEASE_STORE_FILE)
        storePassword MYAPP_RELEASE_STORE_PASSWORD
        keyAlias MYAPP_RELEASE_KEY_ALIAS
        keyPassword MYAPP_RELEASE_KEY_PASSWORD
    }
}	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;buildTypes&lt;/code&gt;字段的&lt;code class=&quot;highlighter-rouge&quot;&gt;release &lt;/code&gt;中添加&lt;/p&gt;

 	signingConfig signingConfigs.release

&lt;p&gt;添加好后就像下面代码的样子（省略号表示还有其他的默认代码）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android {
   
    defaultConfig { ... }
    signingConfigs {
        release {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            ...
            signingConfig signingConfigs.release
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;生成发行apk包&quot;&gt;生成发行APK包&lt;/h4&gt;

&lt;p&gt;在项目中&lt;code class=&quot;highlighter-rouge&quot;&gt;android &lt;/code&gt;目录下运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./gradlew assembleRelease
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew assembleRelease&lt;/code&gt;表示执行当前目录下的名为gradlew的脚本文件，运行参数为assembleRelease&lt;/p&gt;

&lt;p&gt;最后apk文件生成在&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build/outputs/&lt;/code&gt;文件夹中，我的叫做 &lt;strong&gt;app-release.apk&lt;/strong&gt;，拷贝到手机上即可安装&lt;/p&gt;

&lt;h3 id=&quot;集成codepush到安卓项目中&quot;&gt;集成codepush到安卓项目中&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://microsoft.github.io/code-push/docs/react-native.html#link-5&quot;&gt;参考文档1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/react-native-code-push#android-setup&quot;&gt;参考文档2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;codepush有两种方式导入，我这里选择的是&lt;a href=&quot;https://www.npmjs.com/package/rnpm&quot;&gt;rnpm&lt;/a&gt;的方式&lt;/p&gt;

&lt;h4 id=&quot;安装rnpm&quot;&gt;安装rnpm&lt;/h4&gt;

&lt;p&gt;终端输入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i -g rnpm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;导入配置到项目中&quot;&gt;导入配置到项目中&lt;/h4&gt;

&lt;p&gt;进入项目中 &lt;code class=&quot;highlighter-rouge&quot;&gt;android&lt;/code&gt;文件夹运行命令导入配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rnpm link react-native-code-push
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;android/settings.gradle&lt;/code&gt;文件，添加如下代码（貌似插件导入后会自动添加进入）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;include ':app', ':react-native-code-push'
project(':react-native-code-push').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-code-push/android/app')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;文件 （貌似也会自动添加）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
dependencies {
    ...
    compile project(':react-native-code-push')
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;继续修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt;文件 ，添加代码（貌似还是会自动添加）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply from: &quot;../../node_modules/react-native/react.gradle&quot;
apply from: &quot;../../node_modules/react-native-code-push/android/codepush.gradle&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看codepush 部署秘钥，拷贝出对应环境的 key （这点很重要）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push deployment ls &amp;lt;appName&amp;gt; --displayKeys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/src/java/com/工程名/MainApplication.java&lt;/code&gt;文件&lt;/p&gt;

&lt;p&gt;React Native 版本 &amp;gt;= v0.29 添加代码如下样子（在&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules/react-native/package.json&lt;/code&gt;中查看）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import com.microsoft.codepush.react.CodePush;

public class MainApplication extends Application implements ReactApplication {

    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {
       
        @Override
        protected String getJSBundleFile() {
            return CodePush.getJSBundleFile();
        }

        @Override
        protected List&amp;lt;ReactPackage&amp;gt; getPackages() {
           it, you can run &quot;code-push deployment ls &amp;lt;appName&amp;gt; -k&quot; to retrieve your key.
            return Arrays.&amp;lt;ReactPackage&amp;gt;asList(
                new MainReactPackage(),
                new CodePush(&quot;这里填上文的 key &quot;, MainApplication.this, BuildConfig.DEBUG)
            );
        }
    };
}	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/app/build.gradle&lt;/code&gt; 文件 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;versionName &lt;/code&gt; 改为 1.0.0（随便改成啥，但格式需要这样的，自行根据当前版本修改），因为 &lt;strong&gt;codepush&lt;/strong&gt;需要三位&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android{
    defaultConfig{
        versionName &quot;1.0.0&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑 &lt;code class=&quot;highlighter-rouge&quot;&gt;android/index.android.js&lt;/code&gt;文件，添加codepush代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import codePush from &quot;react-native-code-push&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在 父组件的&lt;strong&gt;componentDidMount&lt;/strong&gt; 方法中调用热更新方法&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;componentDidMount(){
    codePush.sync();
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;react-native-打包-bundle-文件&quot;&gt;react native 打包 bundle 文件&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react-native/blob/master/local-cli/bundle/bundleCommandLineArgs.js&quot;&gt;相关命令&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;常用参数解释&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--entry-file //ios或android入口的文件名称，一般叫 index.ios.js或 index.android.js

--platform //平台名称(ios/android)

--dev //设置为false的时候会对JavaScript代码进行优化处理。

--bundle-output //生成的jsbundle文件的名称(包含路径)，比如./ios/bundle/index.ios.jsbundle

--assets-dest //图片以及其他资源存放的目录,比如./ios/assets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的打包命令如下，我的静态资源放到 ios/Trip/assets 中的（依照个人的路径为准）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;特别注意：bundle 文件夹 需要事先手动建好&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native bundle --entry-file index.android.js --platform android --dev false --bundle-output ./android/bundle/index.android.jsbundle --assets-dest ./android/assets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此时成功会在&lt;strong&gt;&lt;em&gt;ios&lt;/em&gt;&lt;/strong&gt;目录下看到一个&lt;strong&gt;&lt;em&gt;bundle&lt;/em&gt;&lt;/strong&gt;目录，里面是我们的打包文件&lt;/p&gt;

&lt;h3 id=&quot;向codepush发布打包代码&quot;&gt;向codepush发布打包代码&lt;/h3&gt;

&lt;p&gt;随意修改代码，使其表现和手机上显示不一致即可&lt;/p&gt;

&lt;p&gt;然后重新执行打包命令，生成一个新的bundle文件&lt;/p&gt;

&lt;p&gt;执行codepush的发布命令，将新文件发布到&lt;strong&gt;&lt;em&gt;staging&lt;/em&gt;&lt;/strong&gt; 环境中&lt;/p&gt;

&lt;p&gt;相关命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push release &amp;lt;appName&amp;gt; &amp;lt;updateContents&amp;gt; &amp;lt;targetBinaryVersion&amp;gt; --mandatory //发布

code-push deployment history Trip Staging  //查询发布历史
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参数解释&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;appName&amp;gt; //app名称

&amp;lt;updateContents&amp;gt; //Bundle文件所在目录（完整）

&amp;lt;targetBinaryVersion&amp;gt;	// 需要热更的app 版本

--mandatory //此参数非必须  如果有则表示app强制更新
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的命令如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code-push release TripAnd ./android/bundle/index.android.jsbundle 1.0.0 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;成功后重启app 则会看到更新（是重启app 需要结束程序后再打开）&lt;/p&gt;</content><summary type="html">运行环境</summary></entry></feed>
